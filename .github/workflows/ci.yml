name: CI

on:
  push:
    branches: [master]
  pull_request:

jobs:
  build:
    env:
      DISPLAY: ":99.0"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
        os: [windows-latest, macos-latest, ubuntu-latest, macos-11.0]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3.1.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache dependencies
        uses: actions/cache@v3.2.4
        if: startsWith(runner.os, 'macOS')
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Cache dependencies
        uses: actions/cache@v3.2.4
        if: matrix.os == 'ubuntu-latest'
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Install additional dependencies
        run: |
          sudo apt-get install xvfb \
                             gnome-keyring \
                             libsecret-1-dev \
                             dbus-x11 \
                             libsecret-tools
        if: ${{ matrix.os == 'ubuntu-latest' }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install --upgrade wheel build
          pip install -r requirements.txt
          pip install -e.
      - name: Lint
        run: pre-commit run --all-files
      - name: Build Wheels
        run: python -m build
      - name: Upload Wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist/*.whl
      - name: Test with PyTest
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          echo "activating dbus..."
          export "$(dbus-launch)"
          echo "activating gnome-keyring daemon..."
          echo "" | gnome-keyring-daemon --unlock
          gnome-keyring-daemon --start --daemonize --components=secrets
          export "$(echo "" | gnome-keyring-daemon -r -d --unlock)"
          pytest
      - name: Test with PyTest
        if: ${{ matrix.os != 'ubuntu-latest' }}
        run: pytest
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.1.3
        env:
          CIBW_ARCHS_LINUX: x86_64
          CIBW_ARCHS_MACOS: x86_64
          CIBW_BUILD: cp310-*
          CIBW_MANYLINUX_X86_64_IMAGE: quay.io/pypa/manylinux2014_x86_64
          CIBW_BEFORE_ALL_LINUX: yum update -y && yum install libsecret-devel -y
      - name: Upload Coverage Report
        uses: codecov/codecov-action@v3
